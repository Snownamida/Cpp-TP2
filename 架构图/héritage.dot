
digraph graphname {
    
	node [
		fontname="Helvetica,Arial,sans-serif"
		shape=record
		style=filled
		fillcolor=gray95
	]
    

    

	Journey [label = <{<b>Journey</b>  |<b>Attributs</b><br/>const char *_from<br/>const char *_to<br/>unsigned int refCount = 0|<b>Méthodes</b><br/>virtual void show(void) const<br/>Journey(const char *start = &quot;&quot;, const char *end = &quot;&quot;)<br/>friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, const Journey &amp;journey)<br/>virtual ~Journey()}>;];


	SimpleJourney [label = <{<b>SimpleJourney</b>  |<b>Attributs</b><br/>const char *_transportMethod|<b>Méthodes</b><br/>SimpleJourney(const char *start = &quot;&quot;, const char *end = &quot;&quot;,const char *transportMethod = &quot;&quot;)<br/>virtual ~SimpleJourney()<br/>void show(void) const}>;];


	Journeys [label = <{<b>Journeys</b>  |<b>Attributs</b><br/>LinkedList&lt;Journey&gt; journeyLinkedList|<b>Méthodes</b><br/>friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, const Journeys &amp;journeys)<br/>void add(Journey *pjourney)<br/>void show(const char sep = &#x27;\|&#x27;) const}>;];


	Catalog [label = <{<b>Catalog</b>  |<b>Attributs</b><br/>PathNode pathRoot<br/>|<b>Méthodes</b><br/>friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, const Catalog &amp;Catalog)<br/>void search(const char *const from, const char *const to, PathNode *pathHead = nullptr)}>;];


	PathNode [label = <{<b>PathNode</b>  |<b>Attributs</b><br/>Journey *pjourney<br/>PathNode *lastPathNode<br/>LinkedList&lt;PathNode&gt; nextPathNodes<br/>unsigned int refCount = 0|<b>Méthodes</b><br/>}>;];


	CompositeJourney [label = <{<b>CompositeJourney</b>  |<b>Attributs</b><br/>|<b>Méthodes</b><br/>int add(Journey *journey, bool check = true)<br/>friend std::ostream &amp;operator&lt;&lt;(std::ostream &amp;os, const CompositeJourney &amp;compositeJourney)<br/>void show(void) const}>;];

    CompositeJourney; 
    Journeys;
    Catalog;
    
    Catalog -> Journeys;
    CompositeJourney -> Journeys;
    CompositeJourney -> Journey;
    SimpleJourney -> Journey;
    
}
